#pragma checksum "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3d52ce0991adaea955154e75a0768d0416ff063a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\LICENTA\Monopoly\Monopoly\Views\_ViewImports.cshtml"
using Monopoly;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\LICENTA\Monopoly\Monopoly\Views\_ViewImports.cshtml"
using Monopoly.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
using Monopoly.Areas.Identity.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3d52ce0991adaea955154e75a0768d0416ff063a", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d86fd3ed6c31c356d20b466714e6a83b2a2b8a87", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/home-page.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/main-page.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("centered-image"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "../Shared/_LoginPartial.cshtml", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "public", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "private", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("main-page"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/chat-main-page.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "3d52ce0991adaea955154e75a0768d0416ff063a7346", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d52ce0991adaea955154e75a0768d0416ff063a8604", async() => {
                WriteLiteral("\r\n    <div class=\"custom\">\r\n        \r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3d52ce0991adaea955154e75a0768d0416ff063a8912", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        <div class=""chat"">
            <div style=""justify-content:center"">
                <h2 class=""rules-text"" style=""color:#F5CD6C;"">Monopoly chat</h2>
            </div>
            <hr style=""border-color:#F5CD6C;background-color:#F5CD6C"">
            <div class=""send-message"">
                <div class=""send-message-title"">Message:</div>
                <input type=""text"" id=""txtmessage"" class=""input-message"" onkeyup=""checkRequiredFields()""/>
                <button type=""button"" id=""sendBtn"" class=""btn send-message-button"" disabled=""true"">Send</button>
            </div>
            
            <div class=""message-list"" id=""messagesList"">
                <ul id=""ulmessages"" style=""color:white""></ul>
            </div>

        </div>
        <div class=""buttons"">
            <button class=""bottom-button"" onclick=""openCreateRoomPopup()"">Create Room</button>
            <button class=""bottom-button"" onclick=""openJoinPublicRoomPopup()"">Join Public Room</button>
            <button");
                WriteLiteral(@" class=""bottom-button"" onclick=""openJoinPrivateRoomPopup()"">Join Private Room</button>
            <button class=""bottom-button"" onclick=""openRulesPopup()"">Rules</button>
        </div>
        <div class=""navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse profile-button"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3d52ce0991adaea955154e75a0768d0416ff063a11501", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        </div>\r\n    </div>\r\n\r\n");
                WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" id=""modalRules"">
    <div class=""modal-dialog modal-md"" style=""max-width: 1000px"">
        <div class=""modal-content"" style=""background-color: #52755F; max-height: calc(100vh - 210px); overflow-y: auto;"">
            <div class=""modal-header"" style=""justify-content: center"">
                <h2 class=""modal-title rules-text"" style=""color: #F5CD6C;"">Monopoly rules</h2>
            </div>
            <div style=""margin:10px"" class=""text-center"">
                <h4 class=""rules-text"">Game start</h4>
                <div class=""subrules"">
                    Each player starts the Game with 2000$.
                </div>
                <div class=""subrules"">
                    Each time you pass through or over the ""GO"" card, you will receive 200$.
                </div>
                <div class=""subrules"">
                    If a player rolls a double, he has the right to roll again.
                    If he rolls a doub");
                WriteLiteral(@"le for three times in a round, the third one is unavailable and the player will go to Jail.
                </div>
                <br>

                <h4 class=""rules-text"">Arrival on unbought street</h4>
                <div class=""subrules"">
                    When a player lands on a street that is unbought he has the posibility to buy the street at the price that is displayed on the card.
                </div>
                <br>

                <h4 class=""rules-text"">Arrival on bought street</h4>
                <div class=""subrules"">
                    When a player lands on a bought street he will pay the rent for that property.
                </div>
                <div class=""subrules"">
                    The rent is going to double when a player will have a complete color group (a neighborhood).
                </div>
                <br>

                <h4 class=""rules-text"">Jail</h4>
                <div class=""subrules"">
                    A player goes to Jail w");
                WriteLiteral(@"hen he arrive on the ""GO TO JAIL"" card or when he rolls a double for three times in a row.
                </div>
                <div class=""subrules"">
                    The player can roll the dice even if he is in Jail, but he is going to use them only when:
                    <ul>
                        <li>He already stayed for two rounds.</li>
                        <li>By paying 20$ if he rolls doubles.</li>
                        <li>By paying 50$ otherwise.</li>
                    </ul>
                </div>
                <div class=""subrules"">
                    A player can make trasactions, collect rents even though he is in Jail.
                </div>
                <br>

                <h4 class=""rules-text"">Buildings</h4>
                <div class=""subrules"">
                    They can be made only on a neighborhood.
                </div>
                <br>
                
                <h4 class=""rules-text"">Selling a property</h4>
                <");
                WriteLiteral(@"div class=""subrules"">
                    The unbuilt lands, airports, stations and factories can be sold to a player by negociations.
                </div>
                <div class=""subrules"">
                    The buildings can be sold only to the bank, at half the purchase price.
                </div>
                <br>

                <h4 class=""rules-text"">Mortage</h4>
                <div class=""subrules"">
                    They are made by the bank. The value of the mortage is half the price of the street.
                </div>
                <br>

                <h4 class=""rules-text"">Banckrupcity</h4>
                <div class=""subrules"">
                    A player that can't pay the rent to another player is going to gave in all his properties to the second player and to lose the game.
                </div>
                <br>

                <h4 class=""rules-text"">Winner</h4>
                <div class=""subrules"">
                    When the players are go");
                WriteLiteral(@"ing in banckrupcity, the winner is the one who remains last.
                </div>
            </div>

            <div class=""modal-footer"" style=""justify-content:center"">
                <button type=""button"" class=""btn close-rules-button"" onclick=""closeRulesPopup()"">Close</button>
            </div>

        </div>
    </div>
</div>

");
                WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" id=""modalCreateRoom"">
    <div class=""modal-dialog modal-md"">
        <div class=""modal-content"" style=""background-color: #52755F;"">
            <div class=""modal-header text-center"" style=""justify-content: center"">
                <h2 class=""modal-title rules-text"" style=""color: #F5CD6C;"">Create game room</h2>
            </div>
            <div style=""margin:10px"" class=""text-center"">
                <h4 style=""color:white"">Room type:</h4>
                <select name=""roomType"" id=""roomType"" class=""room-type"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d52ce0991adaea955154e75a0768d0416ff063a18125", async() => {
                    WriteLiteral("Public room");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d52ce0991adaea955154e75a0768d0416ff063a19374", async() => {
                    WriteLiteral("Private room");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </select>
            </div>
            <div style=""margin:10px"" class=""text-center"" id=""roomNameDiv"">
                <h4 style=""color:white"">Room name*:</h4>
                <input type=""text"" id=""roomName"" class=""input-message"" onkeyup=""checkRoomRequiredFields()""/>
            </div>
            <div style=""margin:10px"" class=""text-center"" id=""roomPasswordDiv"">
                <h4 style=""color:white"">Room password*:</h4>
                <input type=""password"" id=""roomPassword"" class=""input-message"" onkeyup=""checkRoomRequiredFields()""/>
            </div>
            <div style=""margin:10px"" class=""text-center"" id=""roomNameDiv"">
                <h4 style=""color:white"">Number of players*:</h4>
                <div style=""display:flex;justify-content:center"">
                    <div style=""display:flex;margin:5px"" >
                        <input type=""radio"" id=""TwoPlayers"" name=""playersNumber"" value=""2"" style=""margin:5px"" checked=""checked"">
                        <label f");
                WriteLiteral(@"or=""TwoPlayers"" style=""font-size:large;color:white"">2</label><br>
                    </div>
                    <div style=""display:flex;margin:5px"" >
                        <input type=""radio"" id=""ThreePlayers"" name=""playersNumber"" value=""3"" style=""margin:5px"">
                        <label for=""ThreePlayers"" style=""font-size:large;color:white"">3</label><br>  
                    </div>
                    <div style=""display:flex;margin:5px"" >
                        <input type=""radio"" id=""FourPlayers"" name=""playersNumber"" value=""4"" style=""margin:5px"">
                        <label for=""FourPlayers"" style=""font-size:large;color:white"">4</label><br><br>
                    </div>
                </div>
            </div>
            
            <div class=""modal-footer"" style=""justify-content:center"">
                <button type=""button"" class=""btn close-rules-button""");
                BeginWriteAttribute("onclick", " onclick=\"", 9023, "\"", 9152, 9);
                WriteAttributeValue("", 9033, "CreateRoom(`", 9033, 12, true);
#nullable restore
#line 179 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
WriteAttributeValue("", 9045, UserManager.GetUserAsync(User).Result.FirstName, 9045, 48, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 9093, "`+", 9093, 2, true);
                WriteAttributeValue(" ", 9095, "`", 9096, 2, true);
                WriteAttributeValue(" ", 9097, "`", 9098, 2, true);
                WriteAttributeValue(" ", 9099, "+", 9100, 2, true);
                WriteAttributeValue(" ", 9101, "`", 9102, 2, true);
#nullable restore
#line 179 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
WriteAttributeValue("", 9103, UserManager.GetUserAsync(User).Result.LastName, 9103, 47, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 9150, "`)", 9150, 2, true);
                EndWriteAttribute();
                WriteLiteral(" id=\"createRoomButton\" disabled=\"true\">Create</button>\r\n                <button type=\"button\" class=\"btn close-rules-button\" onclick=\"closeCreateRoomPopup()\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
                WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" id=""modalJoinPublicRoom"">
    <div class=""modal-dialog modal-md"">
        <div class=""modal-content"" style=""background-color: #52755F;"">
            <div class=""modal-header text-center"" style=""justify-content: center"">
                <h2 class=""modal-title rules-text"" style=""color: #F5CD6C;"">Join public room</h2>
            </div>
            <div style=""margin-top:10px;margin-left:10px;margin-right:10px"" class=""text-center"">
                <h4 style=""color:white"">Select a room you would like to join:</h4>
            </div>
            <div style=""margin:10px"" class=""text-center"" id=""availablePublicRooms"" hidden=""true"">
                <select id=""selectPublicRoom"" class=""select-public-room form-control"" style=""height:100%"" multiple></select> 
            </div>
            <div style=""margin:10px;color:white;font-size:larger"" class=""text-center"" id=""noPublicRooms"" hidden=""true"">No public rooms available</div>
           ");
                WriteLiteral(" <div class=\"modal-footer\" style=\"justify-content:center\">\r\n                <button type=\"button\" class=\"btn close-rules-button\"");
                BeginWriteAttribute("onclick", " onclick=\"", 10562, "\"", 10695, 9);
                WriteAttributeValue("", 10572, "JoinPublicRoom(`", 10572, 16, true);
#nullable restore
#line 201 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
WriteAttributeValue("", 10588, UserManager.GetUserAsync(User).Result.FirstName, 10588, 48, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 10636, "`+", 10636, 2, true);
                WriteAttributeValue(" ", 10638, "`", 10639, 2, true);
                WriteAttributeValue(" ", 10640, "`", 10641, 2, true);
                WriteAttributeValue(" ", 10642, "+", 10643, 2, true);
                WriteAttributeValue(" ", 10644, "`", 10645, 2, true);
#nullable restore
#line 201 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
WriteAttributeValue("", 10646, UserManager.GetUserAsync(User).Result.LastName, 10646, 47, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 10693, "`)", 10693, 2, true);
                EndWriteAttribute();
                WriteLiteral(" disabled=\"true\" hidden=\"true\" id=\"joinPublicRoomButton\">Join</button>\r\n                <button type=\"button\" class=\"btn close-rules-button\" onclick=\"closeJoinPublicRoomPopup()\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
                WriteLiteral(@"<div class=""modal fade"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" id=""modalJoinPrivateRoom"">
    <div class=""modal-dialog modal-md"">
        <div class=""modal-content"" style=""background-color: #52755F;"">
            <div class=""modal-header text-center"" style=""justify-content: center"">
                <h2 class=""modal-title rules-text"" style=""color: #F5CD6C;"">Join private room</h2>
            </div>
            <div style=""margin-top:10px;margin-left:10px;margin-right:10px"" class=""text-center"">
                <h4 style=""color:white"">Select a room you would like to join:</h4>
            </div>

            <div style=""margin:10px"" class=""text-center"" id=""availablePrivateRooms"" hidden=""true"">
                <select id=""selectPrivateRoom"" class=""select-public-room form-control"" multiple></select> 
            </div>

            <div style=""margin:10px;color:white;font-size:larger"" class=""text-center"" id=""noPrivateRooms"" hidden=""true"">No private rooms available</div>

            <input ");
                WriteLiteral(@"type=""text"" id=""privateRoomPassword"" class=""input-message"" onkeyup=""checkRequiredFieldsPrivateRoom()"" hidden=""true""/>
            <div class=""alert alert-danger"" role=""alert"" style=""margin:10px;font-weight:bold;color:red"" hidden=""true"" id=""wrongPassword"">Wrong password!</div>
            <div class=""modal-footer"" style=""justify-content:center"">
                <button type=""button"" class=""btn close-rules-button""");
                BeginWriteAttribute("onclick", " onclick=\"", 12416, "\"", 12550, 9);
                WriteAttributeValue("", 12426, "JoinPrivateRoom(`", 12426, 17, true);
#nullable restore
#line 228 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
WriteAttributeValue("", 12443, UserManager.GetUserAsync(User).Result.FirstName, 12443, 48, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 12491, "`+", 12491, 2, true);
                WriteAttributeValue(" ", 12493, "`", 12494, 2, true);
                WriteAttributeValue(" ", 12495, "`", 12496, 2, true);
                WriteAttributeValue(" ", 12497, "+", 12498, 2, true);
                WriteAttributeValue(" ", 12499, "`", 12500, 2, true);
#nullable restore
#line 228 "D:\LICENTA\Monopoly\Monopoly\Views\Home\Index.cshtml"
WriteAttributeValue("", 12501, UserManager.GetUserAsync(User).Result.LastName, 12501, 47, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 12548, "`)", 12548, 2, true);
                EndWriteAttribute();
                WriteLiteral(" disabled=\"true\" id=\"joinPrivateRoomButton\">Join</button>\r\n                <button type=\"button\" class=\"btn close-rules-button\" onclick=\"closeJoinPrivateRoomPopup()\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    function openRulesPopup()
    {
        $('#modalRules').modal('show');
    }

    function closeRulesPopup()
    {
        $('#modalRules').modal('hide');
    }

    $('#roomPasswordDiv').hide();
    $('#roomType').change(function(){
        if($('#roomType').children(""option:selected"").val()==""private""){
            $('#roomPasswordDiv').show();
        }else{
            $('#roomPasswordDiv').hide();
        }
    });

    function checkRoomRequiredFields()
    {
        if($('#roomName').val() != """" && $('#roomType').children(""option:selected"").val()==""public""){
            $('#createRoomButton').prop('disabled', false);
        }else if($('#roomName').val() != """" && $('#roomType').children(""option:selected"").val()==""private"" && $('#roomPassword').val() != """"){
            $('#createRoomButton').prop('disabled', false);
        }else {
            $('#createRoomButton').prop('disabled', true);
        }
    }

    function checkRequiredFieldsPrivateRoom()
 ");
            WriteLiteral(@"   {
        console.log($(""#privateRoomPassword"").val());
        console.log($( ""#selectPrivateRoom :selected"").length)
        if($( ""#selectPrivateRoom :selected"").length != 0 && $(""#privateRoomPassword"").val() != """"){
            $('#joinPrivateRoomButton').prop('disabled', false);
        }else{
            $('#joinPrivateRoomButton').prop('disabled', true);
        }
    }

    function CreateRoom(player)
    {
        var roomName = $('#roomName').val();
        var password = $('#roomPassword').val();
        var playersNumber = $('input[name=""playersNumber""]:checked').val()
        console.log(""Da"");
        $.ajax({
            type: 'GET',
            url: 'Home/CreateRoom',
            dataType: 'json',
            data: {
                roomName: roomName,
                password: password,
                player: player,
                playersNumber: playersNumber
            }
        });
        $('#modalCreateRoom').modal('hide');
        window.location.href =");
            WriteLiteral(@" 'Home/WaitingRoom';
    }
    
    function checkRequiredFields()
    {
        if($('#txtmessage').val() != """"){
            $('#sendBtn').prop('disabled', false);
        }else {
            $('#sendBtn').prop('disabled', true);
        }
    }

    function openCreateRoomPopup()
    {
       $('#modalCreateRoom').modal('show'); 
    }

    function closeCreateRoomPopup()
    {
       $('#modalCreateRoom').modal('hide'); 
    }

    function openJoinPublicRoomPopup()
    {
        if(window.location.href.includes('Index'))
            url = 'GetPublicRoomsList';
        else url = 'Home/GetPublicRoomsList'
        $.ajax({
            url: url,
            type: 'GET',
            contentType: 'application/json',
            success: function(data) {
                if(data.length!=0)
                {
                    $('#availablePublicRooms').prop('hidden', false);
                    $('#joinPublicRoomButton').prop('hidden', false);
                    $(""#selectP");
            WriteLiteral(@"ublicRoom"").empty();
                    $.each(data, function(){
                        var connectedPlayers = 0;
                        if(this.player1!=null)
                            connectedPlayers++;
                        if(this.player2!=null)
                            connectedPlayers++;
                        if(this.player3!=null)
                            connectedPlayers++;
                        if(this.player4!=null)
                            connectedPlayers++;
                        if(connectedPlayers < this.playersNumber){
                            var displayedName = this.roomName + "" ("" + connectedPlayers + ""/"" + this.playersNumber + "")"";
                            $(""#selectPublicRoom"").append('<option style=""color:white;font-size:larger"" class=""select-public-room"" value=""'+ this.roomId +'"">'+ displayedName +'</option>')
                        }
                    });

                    var selectPublic = document.getElementById('selectPublicRoom');");
            WriteLiteral(@"
                    selectPublic.size = selectPublic.length;
                }else{
                    $('#noPublicRooms').prop('hidden', false);
                    $('#joinPublicRoomButton').prop('hidden', true);
                }
                $('#modalJoinPublicRoom').modal('show');
            }
        }
        );
    }

    function closeJoinPublicRoomPopup()
    {
        $('#modalJoinPublicRoom').modal('hide'); 
    }

    function JoinPublicRoom(player)
    {
        var id = parseInt($( ""#selectPublicRoom"").val()[0]);
        $.ajax({
            type: 'GET',
            url: 'Home/JoinPublicRoom',
            dataType: 'json',
            data: {
                roomId:id,
                player:player
            }
        });
        if(!window.location.href.includes('Index'))
            window.location.href = 'Home/WaitingRoom';
        else window.location.href = 'WaitingRoom';
    }

    function JoinPrivateRoom(player)
    {
        var id = parseInt");
            WriteLiteral(@"($( ""#selectPrivateRoom"").val()[0]);
        $.ajax({
            type: 'GET',
            url: 'Home/JoinPrivateRoom',
            dataType: 'json',
            data: {
                roomId:id,
                player:player,
                password: $('#privateRoomPassword').val()
            },
            success: function(data) {
                console.log(data)
                if(data == ""Wrong password""){
                    $('#wrongPassword').prop('hidden', false);
                }else{
                    if(!window.location.href.includes('Index'))
                        window.location.href = 'Home/WaitingRoom';
                    else window.location.href = 'WaitingRoom';
                }
            }
        });
    }

    function openJoinPrivateRoomPopup()
    {
        if(window.location.href.includes('Index'))
            url = 'GetPrivateRoomsList';
        else url = 'Home/GetPrivateRoomsList'
        $('#joinPrivateRoomButton').prop('disabled', true);
 ");
            WriteLiteral(@"       $.ajax({
            url: url,
            type: 'GET',
            contentType: 'application/json',
            success: function(data) {
                if(data.length!=0){
                    $('#availablePrivateRooms').prop('hidden', false);
                    $('#joinPrivateRoomButton').prop('hidden', false);
                    $('#privateRoomPassword').prop('hidden', false);
                    $(""#selectPrivateRoom"").empty();
                    $.each(data, function(){
                        var connectedPlayers = 0;
                        if(this.player1!=null)
                            connectedPlayers++;
                        if(this.player2!=null)
                            connectedPlayers++;
                        if(this.player3!=null)
                            connectedPlayers++;
                        if(this.player4!=null)
                            connectedPlayers++;
                        if(connectedPlayers < this.playersNumber){
               ");
            WriteLiteral(@"             var displayedName = this.roomName + "" ("" + connectedPlayers + ""/"" + this.playersNumber + "")"";
                            $(""#selectPrivateRoom"").append('<option style=""color:white;font-size:larger"" class=""select-public-room"" value=""'+ this.roomId +'"">'+ displayedName +'</option>')
                        }
                        
                    });

                    var selectPrivate = document.getElementById('selectPrivateRoom');
                    selectPrivate.size = selectPrivate.length;
                }else{
                    $('#noPrivateRooms').prop('hidden', false);
                    $('#joinPrivateRoomButton').prop('hidden', true);
                }
                
                $('#modalJoinPrivateRoom').modal('show');
            }
        }
        );
    }

    function closeJoinPrivateRoomPopup()
    {
        $('#modalJoinPrivateRoom').modal('hide'); 
    }

    $('#selectPublicRoom').change(function() {
        if($( ""#selectPublicRoom :");
            WriteLiteral(@"selected"").length != 0){
            $('#joinPublicRoomButton').prop('disabled', false);
        }else{
            $('#joinPublicRoomButton').prop('disabled', true);
        }
    });

    $('#selectPrivateRoom').change(function() {
        if($( ""#selectPrivateRoom :selected"").length == 0){
            $('#joinPrivateRoomButton').prop('disabled', true);
        }else if($( ""#selectPrivateRoom :selected"").length != 0 && $(""#privateRoomPassword"").val() != """"){
            $('#joinPrivateRoomButton').prop('disabled', false);
        }
    });

    function DisableBackButton() {
       window.history.forward()
      }
    DisableBackButton();
    window.onload = DisableBackButton;
    window.onpageshow = function(evt) { if (evt.persisted) DisableBackButton() }
    window.onunload = function() { void (0) }
</script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d52ce0991adaea955154e75a0768d0416ff063a39907", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d52ce0991adaea955154e75a0768d0416ff063a40947", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<MonopolyUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<MonopolyUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
